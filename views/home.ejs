<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styling/global.css">
    <link rel="stylesheet" href="/styling/home.css">
    <script defer src="/scripts/modal.js"></script>
    <title>Safe Store</title>
</head>
<body>
    
    <header>
        <h3 class="page-heading">Safe Store</h3>
        <p>logged in as <span class="username"><%= user.email %></span></p>
    </header>

    <div class="home-main">
        <section class="passwords-view">
            <div class="no-search-result">no result found</div>
            <% if(user.accounts.length) {%>
                <% user.accounts.map(function(account) { %>
                    <div class="password-card">
                        <div class="password-card-initial">
                            <p> <%= account.accountName[0] %> </p>
                        </div>
                        <div class="password-card-details">
                            <p class="password-card-name"> <%= account.accountName %> </p>
                            <button class="password-card-btn">Password</button>
                            <div class="password-account-modal">
                                <div class="close-password-account-modal"><p>&times;</p></div>
                                <div class="password-account-main">
                                    <div class="password-account-name">
                                        <div class="password-account-inital">
                                            <p class="initial"> <%= account.accountName[0] %> </p>
                                        </div>
                                        <div class="password-account-fullname">
                                            <p class="fullname"> <%= account.accountName %> </p>
                                        </div>
                                    </div>
                                    <div class="password-account-details">
                                        <form action="">
                                            <div class="form-fields">
                                                <div class="form-attribute">
                                                    <label for="username">Username:</label>
                                                        <input type="text" name="username" id="" value="<%= account.accountUsername %>">                
                                                </div>
                                                <div class="form-attribute">
                                                    <label for="password">Password:</label>
                                                        <input type="password" name="password" id="" value="<%= account.accountPassword %>">
                                                </div>
                                            </div>
                                            <div class="copy-password">copy password</div>
                                        </form>
                                        <div class="password-account-modal-button-options">
                                            <button class="modify password-account-button">Modify</button>
                                            <button class="save password-account-button open-password-result-modal">Save</button>
                                            <div class="password-result-modal">
                                                <p class="password-result-text">update success!</p>
                                                <div class="options">
                                                    <button class="result-ok close-password-result-modal">Ok</button>
                                                </div>
                                            </div>
                                            <div id="password-result-overlay"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="password-account-overlay"></div>
                        </div>
                    </div>
                <% }) %>
            <% } else {%>
                <div class="no-passwords-div">
                    <p class="no-passwords-text">No Passwords to be Shown</p>
                </div>
            <% } %>
        </section>
    
        <section class="operations-view">
            <div class="main-page-operations">
                <input type="text" class="operation-search" placeholder="search">
                <div class="operation-creation-div">
                    <button class="operation-create open-modal">Create</button>
                    <div class="modal">
                        <div class="close-modal"><p>&times;</p></div>
                        <form action="">
                            <div class="form-fields">
                                <div class="form-attribute">
                                    <label for="account_name">Account Name:</label>
                                        <input type="text" name="account_name">
                                        <div class="account-name-error"></div>
                                </div>
                                <%- include("partials/form-fields") %>
                            </div>
                            <div class="submit-button-div">
                                <button class="create-password open-result-modal">Save</button>
                            </div>
                        </form>
                    </div>
                    <div id="overlay"></div>
                    <div class="result-modal">
                        <p class="result-text"></p>
                        <div class="options">
                            <button class="result-yes close-result-modal">Yes</button><button class="result-ok close-result-modal">Ok</button><button class="result-no close-result-modal">No</button>
                        </div>
                    </div>
                    <div id="result-overlay"></div>
                </div>
                <div class="operation-deletion-div">
                    <button class="operation-delete">Delete</button>
                    <div class="delete-options">
                        <div class="delete-options-main">
                            <div class="delete-main-account">
                                <input type="radio" name="" id="">
                                <p>Main Account</p>
                            </div>
                            <hr class="delete-options-seperator"/>
                            <div class="delete-password-account">
                                <p class="downwards-arrow">&darr;</p>
                                <p>Password Account</p>
                                <div class="delete-click-option">
                                    <div class="delete-password-accounts-list"></div>
                                </div>
                            </div>
                        </div>
                        <p class="delete-cancel">cancel</p>
                    </div>
                </div>
            </div>
            <a href="/api/logout/users" class="operation-log-out">log out</a>
        </section>
    </div>

<script>
    //value used for fetch request when performing API related operations
    const username = document.querySelector(".username").textContent;

    const passwordsView = document.querySelector(".passwords-view");
    const [...accountPasswordCards] = document.querySelectorAll(".password-card");
    const [...accountPasswordCardNames] = document.querySelectorAll(".password-card-name");

    const openPasswordModal = document.querySelector(".open-modal");
    const createButton = document.querySelector(".create-password");

    let createPasswordForm = document.querySelector(".modal > form");
    
    let accountNameError = document.querySelector(".account-name-error");
    let accountUsernameError = document.querySelector(".email-error");
    let accountPasswordError = document.querySelector(".password-error");
    
    let resultModalText = document.querySelector(".result-text");

    //all the buttons within the resultModal
    const [...resultModalBtns] = document.querySelectorAll(".close-result-modal");


// section for password account modal //
    let [...passwordAccountForm] = document.querySelectorAll(".password-account-details > form");

    //save buttons within password account modal
    const [...savePasswordAccountBtns] = document.querySelectorAll(".open-password-result-modal");

    let [...passwordResultModalBtns] = document.querySelectorAll(".close-password-result-modal");
// end of section for password account modal //



// section for searching password accounts
    const searchInput = document.querySelector(".operation-search");    
    const noSearchResult = document.querySelector(".no-search-result");
// end of section for searching password accounts

// sections for deleting main or password accounts
    const deleteBtn = document.querySelector(".operation-delete");
    const deleteOptions = document.querySelector(".delete-options");

// end of section for delete main or password accounts

// logout button
    const logOutBtn = document.querySelector(".operation-log-out");
// end of logout button

// cancel delete
    const cancelDelete = document.querySelector(".delete-cancel");
// end of cancel delete
    
    //reload page when password account is created and user clicks "ok"
    resultModalBtns[1].addEventListener("click", function() {
        location.assign("/");
    });
    
    //create password account functionality
    createButton.addEventListener("click", async function(event) {
        event.preventDefault();
    
        
        //reset error fields to nothing
        accountNameError.textContent = "";
        accountUsernameError.textContent = "";
        accountPasswordError.textContent = "";
        
        //default text within result modal
        resultModalText.textContent = "Loading...";
        
        //makes all result-modalbuttons display none
        activeClassRemoval();

        //getting form fields
        let accountName = createPasswordForm.account_name.value;
        let accountUsername = createPasswordForm.email.value;
        let accountPassword = createPasswordForm.password.value;

        if(!accountName) {
            accountNameError.textContent = "Please enter account name";
            return;
        }
        if(!accountUsername) {
            accountUsernameError.textContent = "no email/username provided";
            return;
        }
        if(!accountPassword) {
            accountPasswordError.textContent = "no password provided";
            return;
        }
        
        try {
            let response = await fetch(`/api/create-password-account/users/${ username }`, {
                method: "PATCH",
                body: JSON.stringify({ accountName, accountUsername, accountPassword }),
                headers: { "Content-Type": "application/json" }
            });

            let data = await response.json();

            if(data.user) {
                resultModalText.textContent = "success!";
                resultModalBtns[1].classList.add("active");
            }

            if(data.error) {
                if(data.error.includes("account already exists, update instead?")){
                    resultModalText.textContent = "account already exists, update instead?";
                    resultModalBtns[0].classList.add("active");
                    resultModalBtns[2].classList.add("active");
                }
                console.log(data);
            }
        } catch(err) {
            console.log(err);
        }
    });

    
    //update the password account when the result-yes button is clicked
    resultModalBtns[0].addEventListener("click", function() {
        //default text within result modal
        resultModalText.textContent = "Loading...";

        //makes all result-modalbuttons display none
        activeClassRemoval();

        let accountName = createPasswordForm.account_name.value;
        let accountUsername = createPasswordForm.email.value;
        let accountPassword = createPasswordForm.password.value;

        if(updatePasswordAccount(accountName, accountUsername, accountPassword)){
            resultModalText.textContent = "update success!";
            resultModalBtns[1].classList.add("active");;
        } else if(data.error) {
            resultModalText.textContent = data.error;
        }
    });

    //save updated password account on password account modal when save button is clicked
    savePasswordAccountBtns.map(function(item) {
        let passwordResultText = document.querySelectorAll(".password-result-text");        

        item.addEventListener("click", function() {
            let buttonIndex = savePasswordAccountBtns.indexOf(item);

            passwordResultText[buttonIndex].textContent = "Loading...";
            passwordResultModalBtns[buttonIndex].addEventListener("click", function() { location.assign("/"); });

            let accountName = document.querySelectorAll(".fullname")[buttonIndex].textContent.trim();
            let accountUsername = passwordAccountForm[buttonIndex].username.value;
            let accountPassword = passwordAccountForm[buttonIndex].password.value;

            if(updatePasswordAccount(accountName, accountUsername, accountPassword)) {
                passwordResultText[buttonIndex].textContent = "update success!";
                passwordResultModalBtns[buttonIndex].classList.add("active");
            } else if(data.error) {
                passwordResultText[buttonIndex].textContent = data.error;
            }
        });
    });


    
    // search for password accounts based on user input
    searchInput.addEventListener("keyup", function() {
        //removes the active class so the no search result text won't show
        noSearchResult.classList.remove("active");

        accountPasswordCards.map(function(item) {
            item.classList.remove("hide");
        });

        let accountName = searchInput.value;

        let match = accountName.match(/\s*/);
        let regexp = new RegExp(`^${ accountName }.*`, "i");

        if(match[0] !== accountName) {
            let result = accountPasswordCards.filter(function(item, index) {
                if(!regexp.test(accountPasswordCardNames[index].textContent.trim())) {
                    return accountPasswordCards[index];
                }
            }).map(function(item) {
                item.classList.add("hide");
            });
            if(result.length === accountPasswordCards.length) {
                noSearchResult.classList.add("active");
            }
        }
    });



    //delete button functionality
    deleteBtn.addEventListener("click", function() {
        openPasswordModal.classList.add("hide");
        logOutBtn.classList.add("hide");
        deleteOptions.classList.add("active");
    });


    //cancel delete functionality
    cancelDelete.addEventListener("click", function() {
        openPasswordModal.classList.remove("hide");
        logOutBtn.classList.remove("hide");
        deleteOptions.classList.remove("active");
    });



    //update password account function
    async function updatePasswordAccount(accountName, accountUsername, accountPassword) {
        try {
            let response = await fetch(`api/update-password-account/users/${ username }/${ accountName }`, {
                method: "PATCH",
                body: JSON.stringify({ accountName, accountUsername, accountPassword }),
                headers: { "Content-Type": "application/json" }
            });

            let data = await response.json();

            if(data.user) {
                return true;
            }

            if(data.error) {
                console.log(data);
                return data.error;
            }
        } catch(err) {
            console.log(err);
        }
    }

    //removal of active class from buttons so that it's reset when making new requests
    function activeClassRemoval() {
        resultModalBtns.map(function(item) {
            item.classList.remove("active");
        });
    }
</script>

<%- include("partials/footer") %>